<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>温治康</title>
  <subtitle>nice man</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-07-22T14:36:12.922Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>温治康</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>UML类图几种关系总结</title>
    <link href="http://yoursite.com/2017/07/22/UML%E7%B1%BB%E5%9B%BE%E5%87%A0%E7%A7%8D%E5%85%B3%E7%B3%BB%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2017/07/22/UML类图几种关系总结/</id>
    <published>2017-07-22T14:33:52.000Z</published>
    <updated>2017-07-22T14:36:12.922Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>在UML类图中，常见的有以下几种关系：泛化（Generalization），实现（Realization），关联（Association），聚合（Aggregation），组合(Composition)，依赖(Dependency)</p>
</blockquote>
<p>[TOC]</p>
<h2 id="泛化（Generalization）"><a href="#泛化（Generalization）" class="headerlink" title="泛化（Generalization）"></a>泛化（Generalization）</h2><p>【泛化关系】：是一种<strong>继承</strong>关系，它指定了子类如何特别化父类的所有特征和行为。例如：老虎是动物的一种。<br>【箭头指向】：带三角箭头的实线，箭头指向父类。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://hi.csdn.net/attachment/201104/22/0_1303436788Qi60.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="实现（Realization）"><a href="#实现（Realization）" class="headerlink" title="实现（Realization）"></a>实现（Realization）</h2><p>【实现关系】：是一种类于接口的关系，表示类是接口所有特性和行为的实现<br>【箭头指向】：带三角箭头的虚线，箭头指向接口</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://hi.csdn.net/attachment/201104/22/0_13034367939K49.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="关联（Association）"><a href="#关联（Association）" class="headerlink" title="关联（Association）"></a>关联（Association）</h2><p>【关联关系】：是一种拥有关系，它使一个类知道另一个类的属性和方法。关联可以使双向的，也可以使单向的。双向的关联可以有两个箭头或者没有箭头，单向的关联有一个箭头。如：老师与学生、学生与课程<br>【代码体现】：成员变量<br>【箭头指向】：带普通箭头的实心线，指向被拥有者</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://hi.csdn.net/attachment/201104/22/0_1303436801W1kf.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>上图中，老师与学生是双向关联，老师有多名学生，学生也可能有多名老师。但学生与某课程间的关系为单向关联，一名学生可能要上多门课程，课程是个抽象的东西他不拥有学生。</p>
<h2 id="聚合（Aggregation）"><a href="#聚合（Aggregation）" class="headerlink" title="聚合（Aggregation）"></a>聚合（Aggregation）</h2><p>【聚合关系】：是整体与部分的关系。聚合关系是关联关系的一种，是<strong>强的关联关系</strong>。并且关联和聚合在<strong>语法</strong>上无法区分，必须考察具体的逻辑关系。如：车和轮胎<br>【代码体现】：成员变量<br>【箭头指向】：带空心菱形的实心线，菱形指向整体</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://hi.csdn.net/attachment/201104/22/0_1303436811y36B.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="组合（Composition）"><a href="#组合（Composition）" class="headerlink" title="组合（Composition）"></a>组合（Composition）</h2><p>【组合关系】：是整体与部分的关系，没有公司就不存在部门。组合关系是关联关系的一种，是比聚合关系还要强的关系，它要求普通的聚合关系中代表整体的对象负责代表部分的对象的生命周期<br>【代码体现】：成员变量<br>【箭头指向】：带实心菱形的实线，菱形指向整体</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://hi.csdn.net/attachment/201104/22/0_1303436817mqXK.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<h2 id="依赖（Dependency）"><a href="#依赖（Dependency）" class="headerlink" title="依赖（Dependency）"></a>依赖（Dependency）</h2><p>【依赖关系】：是一种使用的关系,所以要尽量不使用双向的互相依赖。<br>【代码表现】：局部变量、方法的参数或者对静态方法的调用<br>【箭头及指向】：带箭头的虚线，指向被使用者</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://hi.csdn.net/attachment/201104/22/0_130343682580L6.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<hr>
<p>各种关系的强弱顺序：<strong>泛化 = 实现 &gt; 组合 &gt; 聚合 &gt; 关联 &gt; 依赖</strong></p>
<p>下面这张UML图，比较形象地展示了各种类图的关系：<br><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="http://hi.csdn.net/attachment/201202/29/0_1330497855hqk2.gif" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure></p>
<hr>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在UML类图中，常见的有以下几种关系：泛化（Generalization），实现（Realization），关联（Association），聚合（Aggregation），组合(Composition)，依赖(Dependency)&lt;/p&gt;
&lt;/b
    
    </summary>
    
    
      <category term="UML" scheme="http://yoursite.com/tags/UML/"/>
    
  </entry>
  
</feed>
